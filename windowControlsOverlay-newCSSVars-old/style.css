:root {
  --fallback-title-bar-height: 40px;
  --theme-color: #10826b;

  /* The idea is that we will be able to override these for testing,
     but it can also work properly once the env()s are implemented(). */
  --titlebar-area-inset-left: env(titlebar-area-inset-left);
  --titlebar-area-inset-right: env(titlebar-area-inset-right);
  --titlebar-area-inset-top: env(titlebar-area-inset-top);
  --titlebar-area-inset-bottom: env(titlebar-area-inset-bottom);
}

:root.emulateWin {
  --titlebar-area-inset-left: 0;
  --titlebar-area-inset-right: 150px;
  --titlebar-area-inset-top: 0;
  --titlebar-area-inset-bottom: calc(100% - 33px);
}

:root.emulateMac {
  --titlebar-area-inset-left: 50px;
  --titlebar-area-inset-right: 50px;
  --titlebar-area-inset-top: 0;
  --titlebar-area-inset-bottom: calc(100% - 33px);
}
  
body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin: 0;
}

#titleBarContainer {
  position: absolute;
  /* this is assuming that the CSS env()s are undefined when they don't have values. */
  /* top: env(titlebar-area-inset-top, 0);
  bottom: env(titlebar-area-inset-bottom, calc(100% - var(--fallback-title-bar-height))); */
  top: var(--titlebar-area-inset-top, 0);
  bottom: var(--titlebar-area-inset-bottom, calc(100% - var(--fallback-title-bar-height)));
  width: 100%;
  background-color: var(--theme-color);
}

#titleBar {
  position: absolute;
  /* top: env(titlebar-area-inset-top, 0); */
  top: var(--titlebar-area-inset-top, 0);
  display: flex;
  user-select: none;
  height: 100%;
  /* left: env(titlebar-area-inset-left, 0);
  right: env(titlebar-area-inset-right, 0);  */
  left: var(--titlebar-area-inset-left, 0);
  right: var(--titlebar-area-inset-right, 0);

  color: #FFFFFF;
  font-weight: bold;
  text-align: center;

  /* cut off UI so you know that it would flow under the overlay */
  overflow: hidden;
}

#titleBar > span {
  margin: auto;
  padding: 0px 16px 0px 16px;
}

#titleBar > input {
  flex: 1;
  margin: 8px 8px 8px 0;
  border-radius: 5px;
  border: none;
  padding: 8px;
}

.overlayArea > button {
  margin: auto;
}

.draggable {
  -webkit-app-region: drag;
}

.nonDraggable {
  -webkit-app-region: no-drag;
}

#mainContent {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  /* height: env(titlebar-area-inset-bottom, calc(100% - var(--fallback-title-bar-height))); */
  height: var(--titlebar-area-inset-bottom, calc(100% - var(--fallback-title-bar-height)));
  bottom: 0;
  overflow-y: scroll;
}

#mainContent.overlay {
  top: env(safe-area-inset-top);
}

.overflowingDiv {
  height: 200%;
  margin: 25px;
}

.mono {
  font-family: 'Courier New', Courier, monospace;
  white-space: pre;
}

.red {
  color: red;
}

#WCOCssTest {
  /* padding-left: env(titlebar-area-top-inset-left);
  padding-right: env(titlebar-area-top-inset-right);
  padding-top: env(titlebar-area-inset-top);
  padding-bottom: env(titlebar-area-inset-bottom); */
  padding-left: var(--titlebar-area-inset-left);
  padding-right: var(--titlebar-area-inset-right);
  padding-top: var(--titlebar-area-inset-top);
  padding-bottom: var(--titlebar-area-inset-bottom);
  width: 50px;
  height: 50px;
  position: absolute;
}
